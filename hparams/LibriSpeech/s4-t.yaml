# ############################################################################
# Model: S4-T
# Authors: Luca Della Libera 2023
# ############################################################################

# Adapted from:
# https://github.com/speechbrain/speechbrain/blob/v0.5.15/recipes/LibriSpeech/ASR/transducer/hparams/conformer_transducer.yaml

experiment_name: LibriSpeech/S4-T

# Seed needs to be set at top of YAML
seed: 0
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Data preparation
data_folder: !PLACEHOLDER
train_splits: [train-clean-100]
dev_splits: [dev-clean]
test_splits: [test-clean]
train_csv: !ref <save_folder>/train.csv
valid_csv: !ref <save_folder>/dev-clean.csv
test_csv: [!ref <save_folder>/test-clean.csv]
skip_prep: False

# Settings for overfitting test
#train_splits: [train-clean-100]
#dev_splits: [dev-clean]
#test_splits: [test-clean]
#train_csv: !ref <save_folder>/dev-clean.csv
#valid_csv: !ref <save_folder>/dev-clean.csv
#test_csv: [!ref <save_folder>/dev-clean.csv]
#skip_prep: False

# Output directories
output_folder: !ref results/<experiment_name>/<seed>
save_folder: !ref <output_folder>/save

# Preprocessing parameters
train_remove_if_longer: 60.0
valid_remove_if_longer: 60.0
test_remove_if_longer: 60.0
sample_rate: 16000
sorting: descending

# Features
n_fft: 400
n_mels: 80
win_length: 25
augment: False

# Training parameters
num_epochs: 100
num_ctc_epochs: 0
ctc_weight: 0.47
num_ce_epochs: 0
ce_weight: 0.47

grad_accumulation_factor: 4
dynamic_batching: True
train_batch_size: 6
valid_batch_size: 12
test_batch_size: 10
train_max_batch_length: 120
valid_max_batch_length: 240
test_max_batch_length: 200
num_buckets: 80
max_batch_size: 128
dataloader_workers: 6

vocab_size: 29  # If token_type=char, must be set equal to the number of found characters
token_type: char  # ["unigram", "bpe", "char"]
character_coverage: 1.0
blank_index: 0  # Index(blank/bos/eos/pad/unk) = 0

lr: 0.002
warmup_steps: 10000
enable_scheduler: False

nonfinite_patience: 10
max_grad_norm: 30.0
auto_mix_prec: False
ckpt_interval_minutes: 600
keep_checkpoints: 10

# Model parameters
dropout: 0.0
d_model: 256
num_encoder_layers: 18
d_ffn: 1024
kernel_size: 15
causal: False
padding: same
s4_layer_type: !name:models.layers.gss.GSS
s4_layer_kwargs:
    gating_size: 256
    hidden_size: 256
    state_size: 128

embedding_dim: 128
decoder_neurons: 256
decoder_num_layers: 1

joint_dim: 256

# Decoding parameters
valid_search_freq: 3
beam_size: 4
# state_beam and expand_beam set according to https://arxiv.org/abs/1904.02619
state_beam: 2.3
expand_beam: 2.3

# Modules
feature_extractor: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>
    win_length: !ref <win_length>

augmentation: !new:speechbrain.lobes.augment.SpecAugment
    time_warp: False
    freq_mask: True
    n_freq_mask: 2
    time_mask: True
    n_time_mask: 2
    replace_with_zero: False
    freq_mask_width: 30
    time_mask_width: 20

speed_perturb: !new:speechbrain.processing.speech_augmentation.SpeedPerturb
    orig_freq: !ref <sample_rate>
    speeds: [90, 100, 110]

frontend: !new:speechbrain.lobes.models.convolution.ConvolutionFrontEnd
    input_shape: [null, null, !ref <n_mels>]
    num_blocks: 2
    num_layers_per_block: 1
    out_channels: (64, 32)
    kernel_sizes: (3, 3)
    strides: (2, 2)
    residuals: (False, False)
    padding: !ref <padding>

encoder: !new:models.s4.S4
    input_size: 640
    d_model: !ref <d_model>
    num_encoder_layers: !ref <num_encoder_layers>
    d_ffn: !ref <d_ffn>
    dropout: !ref <dropout>
    activation: !name:torch.nn.GELU
    causal: !ref <causal>
    s4_layer_type: !ref <s4_layer_type>
    s4_layer_kwargs: !ref <s4_layer_kwargs>

encoder_head: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <joint_dim>
    n_neurons: !ref <vocab_size>

embedding: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <vocab_size>
    embedding_dim: !ref <embedding_dim>
    #consider_as_one_hot: True
    #blank_id: !ref <blank_index>

decoder: !new:speechbrain.nnet.RNN.LSTM
    input_shape: [null, null, !ref <embedding_dim>]
    hidden_size: !ref <decoder_neurons>
    num_layers: !ref <decoder_num_layers>

decoder_head: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <joint_dim>
    n_neurons: !ref <vocab_size>

joiner: !new:speechbrain.nnet.transducer.transducer_joint.Transducer_joint
    joint: sum
    nonlinearity: !name:torch.nn.ReLU

transducer_linear1: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <joint_dim>
    n_neurons: !ref <joint_dim>

transducer_linear2: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <joint_dim>
    n_neurons: !ref <vocab_size>

transducer_head: !new:speechbrain.nnet.containers.Sequential
    - !ref <transducer_linear1>
    - !new:torch.nn.ReLU
    - !ref <transducer_linear2>

modules:
    feature_extractor: !ref <feature_extractor>
    augmentation: !ref <augmentation>
    speed_perturb: !ref <speed_perturb>
    frontend: !ref <frontend>
    encoder: !ref <encoder>
    encoder_head: !ref <encoder_head>
    embedding: !ref <embedding>
    decoder: !ref <decoder>
    decoder_head: !ref <decoder_head>
    joiner: !ref <joiner>
    transducer_head: !ref <transducer_head>

model: !new:torch.nn.ModuleList
    [[!ref <frontend>, !ref <encoder>, #!ref <encoder_head>,
      !ref <embedding>, !ref <decoder>, #!ref <decoder_head>,
      !ref <joiner>, !ref <transducer_head>]]

# Loss functions
transducer_loss: !name:speechbrain.nnet.losses.transducer_loss
    use_torchaudio: True
    blank_index: !ref <blank_index>

ctc_loss: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

ce_loss: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.1

# Optimizers
opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
    betas: (0.9, 0.98)
    eps: 1.e-8

noam_scheduler: !new:speechbrain.nnet.schedulers.NoamScheduler
    lr_initial: !ref <lr>
    n_warmup_steps: !ref <warmup_steps>

# Searchers
greedy_searcher: !new:speechbrain.decoders.transducer.TransducerBeamSearcher
    decode_network_lst: [!ref <embedding>, !ref <decoder>]
    tjoint: !ref <joiner>
    classifier_network: [!ref <transducer_head>]
    blank_id: !ref <blank_index>
    beam_size: 1
    nbest: 1

beam_searcher: !new:speechbrain.decoders.transducer.TransducerBeamSearcher
    decode_network_lst: [!ref <embedding>, !ref <decoder>]
    tjoint: !ref <joiner>
    classifier_network: [!ref <transducer_head>]
    blank_id: !ref <blank_index>
    beam_size: !ref <beam_size>
    nbest: 1
    state_beam: !ref <state_beam>
    expand_beam: !ref <expand_beam>

# Performance metrics
cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
    split_tokens: True

wer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

# Counters, checkpointers, loggers, etc.
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <num_epochs>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        scheduler: !ref <noam_scheduler>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <output_folder>/train_log.txt
