# ############################################################################
# Model: S4-T
# Authors: Luca Della Libera 2023
# ############################################################################

# Adapted from:
# https://github.com/speechbrain/speechbrain/blob/v0.5.15/recipes/CommonVoice/ASR/transducer/hparams/train_fr.yaml

experiment_name: S4-T

# Seed needs to be set at top of YAML
seed: 0
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Data preparation
data_folder: !PLACEHOLDER
splits:
    - dev-clean-1mix
    - dev-clean-2mix
    - dev-clean-3mix
    - test-clean-1mix
    - test-clean-2mix
    - test-clean-3mix
train_json: !ref <data_folder>/dev.json
valid_json: !ref <data_folder>/test.json
test_json: !ref <data_folder>/test.json

# Output directories
output_folder: !ref results/<experiment_name>/<seed>
save_folder: !ref <output_folder>/save

# Preprocessing parameters
sample_rate: 16000
sorting: descending
n_fft: 400
n_mels: 80

# Training parameters
num_epochs: 30
num_ctc_epochs: 0
ctc_weight: 0.0
num_ce_epochs: 0
ce_weight: 0.0

train_batch_size: 4
valid_batch_size: 8
test_batch_size: !ref <valid_batch_size>
train_num_workers: 6
valid_num_workers: 6
test_num_workers: !ref <valid_num_workers>

vocab_size: 29  # If token_type=char, must be set equal to the number of found characters
token_type: char  # ["unigram", "bpe", "char"]
character_coverage: 1.0
blank_index: 0  # Index(blank/bos/eos) = 0

lr: 0.0003
improvement_threshold: 0.0025
annealing_factor: 0.8
patient: 0

nonfinite_patience: 10
max_grad_norm: 5.0
auto_mix_prec: True
ckpt_interval_minutes: 600

# Model parameters
num_layers: 10
d_model: 512
d_ffn: 2048
kernel_size: 31
activation: !name:speechbrain.nnet.activations.Swish
bias: True
dropout: 0.0
causal: True
s4_layer_type: !name:models.dss.DSS
s4_layer_kwargs:
    state_size: 1024
decoder_neurons: !ref <d_model>
joint_dim: !ref <d_model>

# Decoding parameters
beam_size: 1
nbest: 1
state_beam: 2.3  # See https://arxiv.org/abs/1904.02619
expand_beam: 2.3  # See https://arxiv.org/abs/1904.02619

# Modules
speaker_feature_extractor: !new:speechbrain.lobes.features.Fbank
    n_mels: 80

speaker_normalizer: !new:speechbrain.processing.features.InputNormalization
    norm_type: sentence
    std_norm: False

speaker_encoder: !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
    input_size: 80
    channels: [1024, 1024, 1024, 1024, 3072]
    kernel_sizes: [5, 3, 3, 3, 1]
    dilations: [1, 2, 3, 4, 1]
    attention_channels: 128
    lin_neurons: 192

speaker_projection: !new:speechbrain.nnet.linear.Linear
    input_size: 192  # Must be set equal to the speaker encoder embedding size (192 for ECAPA-TDNN)
    n_neurons: !ref <joint_dim>

feature_extractor: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

normalizer: !new:speechbrain.processing.features.InputNormalization
    norm_type: global

augmentation: !new:speechbrain.lobes.augment.SpecAugment
    time_warp: True
    time_warp_window: 5
    time_warp_mode: bicubic
    freq_mask: True
    n_freq_mask: 2
    time_mask: True
    n_time_mask: 2
    replace_with_zero: False
    freq_mask_width: 30
    time_mask_width: 40

CNN: !new:speechbrain.lobes.models.convolution.ConvolutionFrontEnd
    input_shape: (8, 10, 80)
    num_blocks: 3
    num_layers_per_block: 1
    out_channels: (64, 64, 64)
    kernel_sizes: (5, 5, 1)
    strides: (2, 2, 1)
    residuals: (False, False, True)

FF: !new:speechbrain.nnet.containers.ModuleList
    - !new:speechbrain.nnet.linear.Linear
        input_size: 1280
        n_neurons: !ref <d_model>
    - !new:torch.nn.Dropout
        p: !ref <dropout>

encoder: !new:models.s4.S4Encoder
    num_layers: !ref <num_layers>
    d_model: !ref <d_model>
    d_ffn: !ref <d_ffn>
    kernel_size: !ref <kernel_size>
    activation: !ref <activation>
    bias: !ref <bias>
    dropout: !ref <dropout>
    causal: !ref <causal>
    s4_layer_type: !ref <s4_layer_type>
    s4_layer_kwargs: !ref <s4_layer_kwargs>

encoder_head: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <joint_dim>

embedding: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <vocab_size>
    consider_as_one_hot: True
    blank_id: !ref <blank_index>

decoder: !new:speechbrain.nnet.RNN.GRU
    input_shape: [null, null, !ref <vocab_size> - 1]
    hidden_size: !ref <decoder_neurons>
    num_layers: 1
    re_init: True

decoder_head: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <decoder_neurons>
    n_neurons: !ref <joint_dim>
    bias: False

joiner: !new:speechbrain.nnet.transducer.transducer_joint.Transducer_joint
    joint: sum  # [sum | concat]
    nonlinearity: !ref <activation>

transducer_head: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <joint_dim>
    n_neurons: !ref <vocab_size>
    bias: False

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

modules:
    speaker_feature_extractor: !ref <speaker_feature_extractor>
    speaker_normalizer: !ref <speaker_normalizer>
    speaker_encoder: !ref <speaker_encoder>
    speaker_projection: !ref <speaker_projection>
    feature_extractor: !ref <feature_extractor>
    normalizer: !ref <normalizer>
    augmentation: !ref <augmentation>
    CNN: !ref <CNN>
    FF: !ref <FF>
    encoder: !ref <encoder>
    #encoder_head: !ref <encoder_head>
    embedding: !ref <embedding>
    decoder: !ref <decoder>
    #decoder_head: !ref <decoder_head>
    joiner: !ref <joiner>
    transducer_head: !ref <transducer_head>

model: !new:torch.nn.ModuleList
    [[!ref <speaker_feature_extractor>, !ref <speaker_normalizer>, !ref <speaker_encoder>, !ref <speaker_projection>,
      !ref <CNN>, !ref <FF>, !ref <encoder>, #!ref <encoder_head>,
      !ref <embedding>, !ref <decoder>, #!ref <decoder_head>,
      !ref <joiner>, !ref <transducer_head>]]

# Loss functions
transducer_loss: !name:speechbrain.nnet.losses.transducer_loss
    use_torchaudio: True
    blank_index: !ref <blank_index>

ctc_loss: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

ce_loss: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.1

# Optimizers
opt_class: !name:torch.optim.AdamW
    lr: !ref <lr>

lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: !ref <improvement_threshold>
    annealing_factor: !ref <annealing_factor>
    patient: !ref <patient>

# Searchers
beam_searcher: !new:speechbrain.decoders.transducer.TransducerBeamSearcher
    decode_network_lst: [!ref <embedding>, !ref <decoder>]
    tjoint: !ref <joiner>
    classifier_network: [!ref <transducer_head>]
    blank_id: !ref <blank_index>
    beam_size: !ref <beam_size>
    nbest: !ref <nbest>
    state_beam: !ref <state_beam>
    expand_beam: !ref <expand_beam>

# Dataloader options
train_dataloader_kwargs:
    batch_size: !ref <train_batch_size>
    num_workers: !ref <train_num_workers>

valid_dataloader_kwargs:
    batch_size: !ref <valid_batch_size>
    num_workers: !ref <valid_num_workers>

test_dataloader_kwargs:
    batch_size: !ref <test_batch_size>
    num_workers: !ref <test_num_workers>

# Performance metrics
wer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
    split_tokens: True

# Counters, checkpointers, loggers, etc.
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <num_epochs>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        normalizerr: !ref <normalizer>
        scheduler: !ref <lr_annealing>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <output_folder>/train_log.txt

# Pretrainer
pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
    collect_in: !ref <save_folder>
    loadables:
        speaker_encoder: !ref <speaker_encoder>
    paths:
        speaker_encoder: speechbrain/spkrec-ecapa-voxceleb/embedding_model.ckpt
